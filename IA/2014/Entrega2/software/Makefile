#############################################################################
# Makefile for building: software
# Generated by qmake (3.0) (Qt 5.2.1)
# Project:  software.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -o Makefile software.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -m64 -pipe -O2 -Wall -W -fPIE $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -fPIE $(DEFINES)
INCPATH       = -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt5/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		utilidades.cpp \
		array3d.cpp \
		array2d.cpp \
		node.cpp 
OBJECTS       = main.o \
		utilidades.o \
		array3d.o \
		array2d.o \
		node.o
DIST          = software.pro
QMAKE_TARGET  = software
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = software


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp main.h \
		constantes.h \
		utilidades.h \
		array2d.h \
		array3d.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

utilidades.o: utilidades.cpp utilidades.h \
		array2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utilidades.o utilidades.cpp

array3d.o: array3d.cpp array3d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o array3d.o array3d.cpp

array2d.o: array2d.cpp array2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o array2d.o array2d.cpp

node.o: node.cpp node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o node.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

